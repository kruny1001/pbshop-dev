"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngMaterial","ng-context-menu"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("banners"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("disqus"),ApplicationConfiguration.registerModule("g-drive"),ApplicationConfiguration.registerModule("img-utility"),ApplicationConfiguration.registerModule("payments"),ApplicationConfiguration.registerModule("products"),ApplicationConfiguration.registerModule("seller-interface"),ApplicationConfiguration.registerModule("user-interface"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("utility"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("banners").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Banners","banners","dropdown","/banners(/create)?"),Menus.addSubMenuItem("topbar","banners","List Banners","banners"),Menus.addSubMenuItem("topbar","banners","New Banner","banners/create")}]),angular.module("banners").config(["$stateProvider",function($stateProvider){$stateProvider.state("listBanners",{url:"/banners",templateUrl:"modules/banners/views/list-banners.client.view.html"}).state("createBanner",{url:"/banners/create",templateUrl:"modules/banners/views/create-banner.client.view.html"}).state("viewBanner",{url:"/banners/:bannerId",templateUrl:"modules/banners/views/view-banner.client.view.html"}).state("editBanner",{url:"/banners/:bannerId/edit",templateUrl:"modules/banners/views/edit-banner.client.view.html"})}]),angular.module("banners").controller("BannersController",["$scope","$stateParams","$location","Authentication","Banners","Products","ProductsBanner",function($scope,$stateParams,$location,Authentication,Banners,Products,ProductsBanner){$scope.authentication=Authentication,$scope.create=function(){var banner=new Banners({name:this.name,bannerTag:this.bannerTag});banner.$save(function(response){$location.path("banners/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.bannerTag=""},$scope.remove=function(banner){if(banner){banner.$remove();for(var i in $scope.banners)$scope.banners[i]===banner&&$scope.banners.splice(i,1)}else $scope.banner.$remove(function(){$location.path("banners")})},$scope.update=function(){var banner=$scope.banner;banner.$update(function(){$location.path("banners/"+banner._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.banners=Banners.query()},$scope.findOne=function(){$scope.banner=Banners.get({bannerId:$stateParams.bannerId})},$scope.findProductOne=function(){$scope.banner=Banners.get({bannerId:$stateParams.bannerId}),$scope.products=Products.query({bannerId:$stateParams.bannerId})},$scope.toCreateProduct=function(){$location.path("products/create/"+$stateParams.bannerId)},$scope.toEditPoduct=function(){$location.path("products/list/"+$stateParams.bannerId)},$scope.findProductUnderBanner=function(){console.log("banner id is "+$stateParams.bannerId),$scope.products=ProductsBanner.query({},{bannerId:$stateParams.bannerId})}}]),angular.module("banners").factory("Banners",["$resource",function($resource){return $resource("banners/:bannerId",{bannerId:"@_id"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}]),angular.module("banners").factory("BannerByUserId",["$resource",function($resource){return $resource("banners/find/:userId",{userId:"@userId"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/dev",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("ui.tinymce",[]).value("uiTinymceConfig",{plugins:"image, link, fullscreen, code, table, contextmenu, media",contextmenu:"link media image inserttable | cell row column deletetable",image_advtab:!0,image_class_list:[{title:"Responsive Size",value:"img-responsive"}],fullscreen_new_window:!0,fullscreen_settings:{theme_advanced_path_location:"top"}}).directive("uiTinymce",["uiTinymceConfig",function(uiTinymceConfig){uiTinymceConfig=uiTinymceConfig||{};var generatedIds=0;return{require:"ngModel",link:function(scope,elm,attrs,ngModel){var expression,options,tinyInstance;attrs.id||attrs.$set("id","uiTinymce"+generatedIds++),options={setup:function(ed){ed.on("init",function(){ngModel.$render()}),ed.on("ExecCommand",function(){ed.save(),ngModel.$setViewValue(elm.val()),scope.$$phase||scope.$apply()}),ed.on("KeyUp",function(){console.log(ed.isDirty()),ed.save(),ngModel.$setViewValue(elm.val()),scope.$$phase||scope.$apply()})},mode:"exact",elements:attrs.id},expression=attrs.uiTinymce?scope.$eval(attrs.uiTinymce):{},angular.extend(options,uiTinymceConfig,expression),setTimeout(function(){tinymce.init(options)}),ngModel.$render=function(){tinyInstance||(tinyInstance=tinymce.get(attrs.id)),tinyInstance&&tinyInstance.setContent(ngModel.$viewValue||"")}}}}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.firstJumbo="first-jumbo-content",$scope.secondJumbo="second-jumbo-content",$scope.thirdJumbo="third-jumbo-content";var texts=angular.element(document.querySelector(".core-text-anni")),tl=new TimelineMax({repeat:6,repeatDelay:1,yoyo:!0});tl.staggerTo(texts,.2,{className:"+=superShadow",top:"-=10px",ease:Power1.easeIn},"0.3","start")}]),angular.module("core").controller("PlanController",["$scope","$element","Authentication","Getplans",function($scope,$element,Authentication,Getplans){$scope.find=function(){$scope.plans=Getplans.query()},$scope.find()}]),angular.module("core").factory("Getplans",["$resource",function($resource){return $resource("/articles",{userID:"@_id"},{update:{method:"GET"}})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),function(angular,window){var disqusModule=angular.module("disqus",[]);disqusModule.provider("$disqus",function(){function getScriptContainer(){return document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]}function getShortname(){return shortname||window.disqus_shortname}function getScriptSrc(shortname,file){return"//"+shortname+".disqus.com/"+file}function buildScriptTag(src){var script=document.createElement("script");return script.type="text/javascript",script.async=!0,script.src=src,script}function hasScriptTagInPlace(container,scriptSrc){var script,i,scripts=container.getElementsByTagName("script");for(i=0;i<scripts.length;i+=1)if(script=scripts[i],~script.src.indexOf(scriptSrc))return!0;return!1}function setGlobals(id,url,shortname){window.disqus_identifier=id,window.disqus_url=url,window.disqus_shortname=shortname}function getCount(){var widgets=window.DISQUSWIDGETS;widgets&&angular.isFunction(widgets.getCount)&&widgets.getCount()}function resetCommit($location,id){window.DISQUS.reset({reload:!0,config:function(){this.page.identifier=id,this.page.url=$location.absUrl()}})}function addScriptTag(shortname,type){var container=getScriptContainer(),scriptSrc=getScriptSrc(shortname,type);hasScriptTagInPlace(container,scriptSrc)||container.appendChild(buildScriptTag(scriptSrc))}var shortname,TYPE_EMBED="embed.js",TYPE_COUNT="count.js";this.setShortname=function(sname){shortname=sname},this.$get=["$location",function($location){function commit(id){var shortname=getShortname();if(!angular.isDefined(shortname))throw new Error("No disqus shortname defined");if(!angular.isDefined(id))throw new Error("No disqus thread id defined");angular.isDefined(window.DISQUS)?resetCommit($location,id):(setGlobals(id,$location.absUrl(),shortname),addScriptTag(shortname,TYPE_EMBED))}function loadCount(id){setGlobals(id,$location.absUrl(),shortname),addScriptTag(getShortname(),TYPE_EMBED),addScriptTag(getShortname(),TYPE_COUNT),getCount()}return{commit:commit,getShortname:getShortname,loadCount:loadCount}}]}),disqusModule.directive("disqus",["$disqus",function($disqus){return{restrict:"AC",replace:!0,scope:{id:"=disqus"},template:'<div id="disqus_thread"></div>',link:function(scope){scope.$watch("id",function(id){angular.isDefined(id)&&$disqus.commit(id)})}}}]),disqusModule.directive("disqusIdentifier",["$disqus",function($disqus){return{restrict:"A",link:function(scope,elem,attr){$disqus.loadCount(attr.disqusIdentifier)}}}])}(angular,this);var CONFIG={clientId:"574563539488-n0vrevgjp3606l20hfk4rqfk1dc8j3qb.apps.googleusercontent.com",developerKey:"AIzaSyBEGA9BOSoo0DF69RNRh9MsMKDxaVlnT_U",scopes:["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/drive.appdata","https://www.googleapis.com/auth/plus.me","https://www.googleapis.com/auth/paymentssandbox.make_payments"]};angular.module("g-drive").value("configGdrive",CONFIG),angular.module("g-drive").config(["$stateProvider",function(){}]),angular.module("g-drive").factory("Googledrive",["configGdrive",function(configGdrive){function createFolder(FolderName,accessToken){var request=gapi.client.request({path:"/drive/v2/files/",method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+accessToken},body:{title:FolderName,mimeType:"application/vnd.google-apps.folder"}});request.execute(function(resp){console.log(resp)})}function findFolder(callback){gapi.client.load("drive","v2").then(function(){var request=gapi.client.drive.files.list({q:"title contains 'URI-'",fields:"items(id,title)"});request.then(function(resp){callback(resp)})})}function getGoogleDriveInfo(){gapi.client.load("drive","v2").then(function(){var request=gapi.client.drive.about.get();request.execute(function(resp){console.log("Current user name: "+resp.name),console.log("Root folder ID: "+resp.rootFolderId),console.log("Total quota (bytes): "+resp.quotaBytesTotal),console.log("Used quota (bytes): "+resp.quotaBytesUsed)})})}function setupPicker(accessToken,callback){var callbackAfterFindFolder=function(resp){var folderID=resp.result.items[0].id,picker=(new google.picker.PickerBuilder).setOAuthToken(accessToken).setDeveloperKey(configGdrive.developerKey).addView((new google.picker.DocsUploadView).setParent(folderID)).addView((new google.picker.DocsView).setParent(folderID)).enableFeature(google.picker.Feature.MULTISELECT_ENABLED).setLocale("ko").setCallback(callback).build();picker.setVisible(!0)};findFolder(callbackAfterFindFolder)}function listFolder(){gapi.client.load("drive","v2").then(function(){var request=gapi.client.drive.files.list({maxResults:10,fields:"items(id,owners(displayName,emailAddress,isAuthenticatedUser,kind,permissionId),selfLink)"});request.then(function(resp){console.log("result File list"),console.log(resp)});var request=gapi.client.drive.files.list({maxResults:10,fields:"items(id,owners(displayName,emailAddress,isAuthenticatedUser,kind,permissionId),selfLink)"});request.then(function(resp){console.log("result File list"),console.log(resp)})})}return{createFolder:createFolder,findFolder:findFolder,getGoogleDriveInfo:getGoogleDriveInfo,setupPicker:setupPicker,listFolder:listFolder}}]),angular.module("img-utility").directive("lazyImg",["$window","$document",function($window,$document){function LazyImage(element){function isVisible(topFoldOffset,bottomFoldOffset){if(!element.is(":visible"))return!1;null===height&&(height=element.height());var top=element.offset().top,bottom=top+height;return bottomFoldOffset>=top&&top>=topFoldOffset||bottomFoldOffset>=bottom&&bottom>=topFoldOffset||topFoldOffset>=top&&bottom>=bottomFoldOffset}function render(){isRendered=!0,renderSource()}function setSource(newSource){source=newSource,isRendered&&renderSource()}function renderSource(){element[0].src=source}var source=null,isRendered=!1,height=null;return{isVisible:isVisible,render:render,setSource:setSource}}function link($scope,element,attributes){var lazyImage=new LazyImage(element);lazyLoader.addImage(lazyImage),attributes.$observe("lazyImg",function(newSource){lazyImage.setSource(newSource)}),$scope.$on("$destroy",function(){lazyLoader.removeImage(lazyImage)})}var lazyLoader=function(){function addImage(image){images.push(image),renderTimer||startRenderTimer(),isWatchingWindow||startWatchingWindow()}function removeImage(image){for(var i=0;i<images.length;i++)if(images[i]===image){images.splice(i,1);break}images.length||(clearRenderTimer(),stopWatchingWindow())}function checkDocumentHeight(){if(!renderTimer){var currentDocumentHeight=doc.height();currentDocumentHeight!==documentHeight&&(documentHeight=currentDocumentHeight,startRenderTimer())}}function checkImages(){console.log("Checking for visible images...");for(var visible=[],hidden=[],windowHeight=win.height(),scrollTop=win.scrollTop(),topFoldOffset=scrollTop,bottomFoldOffset=topFoldOffset+windowHeight,i=0;i<images.length;i++){var image=images[i];image.isVisible(topFoldOffset,bottomFoldOffset)?visible.push(image):hidden.push(image)}for(var i=0;i<visible.length;i++)visible[i].render();images=hidden,clearRenderTimer(),images.length||stopWatchingWindow()}function clearRenderTimer(){clearTimeout(renderTimer),renderTimer=null}function startRenderTimer(){renderTimer=setTimeout(checkImages,renderDelay)}function startWatchingWindow(){isWatchingWindow=!0,win.on("resize.bnLazySrc",windowChanged),win.on("scroll.bnLazySrc",windowChanged),documentTimer=setInterval(checkDocumentHeight,documentDelay)}function stopWatchingWindow(){isWatchingWindow=!1,win.off("resize.bnLazySrc"),win.off("scroll.bnLazySrc"),clearInterval(documentTimer)}function windowChanged(){renderTimer||startRenderTimer()}var images=[],renderTimer=null,renderDelay=100,win=$($window),doc=$document,documentHeight=doc.height(),documentTimer=null,documentDelay=2e3,isWatchingWindow=!1;return{addImage:addImage,removeImage:removeImage}}();return{link:link,restrict:"A"}}]),angular.module("payments").run(["Menus",function(){}]),angular.module("payments").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPayments",{url:"/payments",templateUrl:"modules/payments/views/list-payments.client.view.html"}).state("createPayment",{url:"/payments/create",templateUrl:"modules/payments/views/create-payment.client.view.html"}).state("viewPayment",{url:"/payments/:paymentId",templateUrl:"modules/payments/views/view-payment.client.view.html"}).state("editPayment",{url:"/payments/:paymentId/edit",templateUrl:"modules/payments/views/edit-payment.client.view.html"})}]),angular.module("payments").controller("PaymentsController",["$scope","$stateParams","$location","Authentication","Payments",function($scope,$stateParams,$location,Authentication,Payments){$scope.authentication=Authentication,$scope.create=function(){var payment=new Payments({name:this.name});payment.$save(function(response){$location.path("payments/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(payment){if(payment){payment.$remove();for(var i in $scope.payments)$scope.payments[i]===payment&&$scope.payments.splice(i,1)}else $scope.payment.$remove(function(){$location.path("payments")})},$scope.update=function(){var payment=$scope.payment;payment.$update(function(){$location.path("payments/"+payment._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.payments=Payments.query()},$scope.findOne=function(){$scope.payment=Payments.get({paymentId:$stateParams.paymentId})}}]),angular.module("payments").factory("GetPurchaseJWT",["$resource",function($resource){return $resource("purchase/gw_test/:productID/:qty/:optdesc",{productID:"@_id",qty:"@qty",optdesc:"@optdesc"},{query:{method:"get",isArray:!0}})}]),angular.module("payments").factory("Payments",["$resource",function($resource){return $resource("payments/:paymentId",{paymentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("payments").factory("PaymentsBySellerData",["$resource",function($resource){return $resource("payments/:sellerData",{sellerData:"@sellerData"},{})}]),angular.module("products").config(["$stateProvider",function($stateProvider){$stateProvider.state("listProducts",{url:"/products",templateUrl:"modules/products/views/list-products.client.view.html"}).state("listProductsUnderBanner",{url:"/products/list/:bannerId",templateUrl:"modules/products/views/list-products-banner.client.view.html"}).state("createProduct",{url:"/products/create/:bannerId",templateUrl:"modules/products/views/create-product.client.view.html"}).state("viewProduct",{url:"/products/:productId",templateUrl:"modules/products/views/view-product.client.view.html"}).state("editProduct",{url:"/products/:productId/edit",templateUrl:"modules/products/views/edit-product.client.view.html"})}]),angular.module("products").controller("ProductsController",["$scope","$stateParams","$location","Authentication","Products","Banners","ProductsBanner",function($scope,$stateParams,$location,Authentication,Products,Banners,ProductsBanner){$scope.authentication=Authentication,$scope.parentId=$stateParams.bannerId,$scope.create=function(){var product=new Products({name:this.name,mainimg:this.mainimg,imgs:this.imgs,price:this.price,description:this.description,parentId:$scope.parentId});product.$save(function(response){$location.path("products/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.mainimg="",this.imgs="",this.price=0,this.description=""},$scope.remove=function(product){if(product){product.$remove();for(var i in $scope.products)$scope.products[i]===product&&$scope.products.splice(i,1)}else $scope.product.$remove(function(){$location.path("products")})},$scope.update=function(){var product=$scope.product;product.$update(function(){$location.path("products/"+product._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.products=Products.query()},$scope.findBanners=function(){$scope.banners=Banners.query()},$scope.findOne=function(){$scope.product=Products.get({productId:$stateParams.productId})},$scope.findProductUnderBanner=function(){console.log("banner id is "+$scope.parentId),$scope.products=ProductsBanner.query({},{bannerId:$scope.parentId})}}]),angular.module("products").factory("ProductsBanner",["$resource",function($resource){return $resource("products/list/:bannerId",{bannerId:"@bannerId"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}]),angular.module("products").factory("ProductByUserId",["$resource",function($resource){return $resource("products/find/:userId",{userId:"@userId"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}]),angular.module("products").factory("Products",["$resource",function($resource){return $resource("products/:productId",{productId:"@_id"},{update:{query:"GET",method:"PUT"}})}]),angular.module("seller-interface").config(["$stateProvider",function($stateProvider){$stateProvider.state("weather",{url:"/weather",templateUrl:"modules/seller-interface/views/weather.client.view.html"}).state("listGdriveapps",{url:"/gdriveapps",templateUrl:"modules/seller-interface/views/list-gdriveapps.client.view.html"}).state("createGdriveapp",{url:"/gdriveapps/create",templateUrl:"modules/seller-interface/views/create-gdriveapp.client.view.html"}).state("viewGdriveapp",{url:"/gdriveapps/:gdriveappId",templateUrl:"modules/seller-interface/views/view-gdriveapp.client.view.html"}).state("editGdriveapp",{url:"/gdriveapps/:gdriveappId/edit",templateUrl:"modules/seller-interface/views/edit-gdriveapp.client.view.html"}).state("gDrive",{url:"/gDrive",templateUrl:"modules/seller-interface/views/gdrive.html"}).state("gDrive2",{"abstract":!0,url:"/gDrive2",templateUrl:"modules/seller-interface/views/storage.html"}).state("gDrive2.dashboard",{url:"/dashboard",templateUrl:"modules/seller-interface/template/gDrive2.dashboard.tmp.html"}).state("gDrive2.addNewProduct",{url:"/addNewProduct",templateUrl:"modules/seller-interface/template/gDrive2.addNewProduct.tmp.html"}).state("gDrive2.editProduct",{url:"/editProduct/:productId",templateUrl:"modules/seller-interface/template/gDrive2.editProduct.tmp.html"}).state("gDrive2.historyPayment",{url:"/historyPayment",templateUrl:"modules/seller-interface/template/gDrive2.historyPayment.tmp.html"})}]),angular.module("seller-interface").controller("DocsController",["$scope","$http","gdocs",function($scope,$http,gdocs){function successCallbackWithFsCaching(resp){var totalEntries=resp.items.length;console.log(totalEntries),resp.items.forEach(function(entry,i){var doc={title:entry.title,updatedDate:Util.formatDate(entry.modifiedDate),updatedDateFull:entry.modifiedDate,icon:entry.iconLink,alternateLink:entry.alternateLink,size:entry.fileSize?"( "+entry.fileSize+" bytes)":null};doc.iconFilename=doc.icon.substring(doc.icon.lastIndexOf("/")+1),console.log(doc.icon);var fsURL=fs.root.toURL()+FOLDERNAME+"/"+doc.iconFilename;window.webkitResolveLocalFileSystemURL(fsURL,function(entry){console.log("Fetched icon from the FS cache"),doc.icon=entry.toURL(),$scope.docs.push(doc),totalEntries-1==i&&($scope.docs.sort(Util.sortByDate),$scope.$apply(function(){}))},function(){$http.get(doc.icon,{responseType:"blob"}).success(function(blob){console.log("Fetched icon via XHR"),blob.name=doc.iconFilename,writeFile(blob),doc.icon=window.URL.createObjectURL(blob),$scope.docs.push(doc),totalEntries-1==i&&$scope.docs.sort(Util.sortByDate)})})})}$scope.test="test_123",$scope.docs=[],$scope.clearDocs=function(){$scope.docs=[]},$scope.fetchDocs=function(retry){if(this.clearDocs(),gdocs.accessToken){var config={params:{alt:"json"},headers:{Authorization:"Bearer "+gdocs.accessToken}};$http.get(gdocs.DOCLIST_FEED,config).success(successCallbackWithFsCaching).error(function(data,status){401==status&&retry&&gdocs.removeCachedAuthToken(gdocs.auth.bind(gdocs,!0,$scope.fetchDocs.bind($scope,!1)))})}},$scope.toggleAuth=function(interactive){gdocs.accessToken?(gdocs.revokeAuthToken(function(){}),this.clearDocs()):gdocs.auth(interactive,function(){$scope.fetchDocs(!1)})},$scope.authButtonLabel=function(){return gdocs.accessToken?"Deauthorize":"Authorize"},$scope.toggleAuth(!1)}]),angular.module("seller-interface").controller("AddNewProductController",["$scope","$stateParams","Authentication","Products","BannerByUserId",function($scope,$stateParams,Authentication,Products,BannerByUserId){$scope.authentication=Authentication,$scope.parentId=$stateParams.bannerId,$scope.create=function(){var product=new Products({name:this.name,mainimg:this.mainimg,imgs:this.imgs,price:this.price,description:this.description,parentId:$scope.selectedBanner._id,detailDesc:$scope.detailDesc});product.$save(function(){alert("Successfully Added"),$scope.error=""},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.mainimg="",this.imgs="",this.price=0,this.description=""},$scope.update=function(){var product=$scope.product;product.$update(function(){alert("updated successfully")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.products=Products.query()},$scope.findBanners=function(){$scope.banners=Banners.query()},$scope.findOne=function(){Products.get({productId:$stateParams.productId}).$promise.then(function(result){$scope.product=result,$scope.selectOption()})},$scope.findProductUnderBanner=function(){console.log("banner id is "+$scope.parentId),$scope.products=ProductsBanner.query({},{bannerId:$scope.parentId})},$scope.getBanners=function(){$scope.banners=BannerByUserId.query({userId:Authentication.user._id})},$scope.selectOption=function(){$scope.selectedBanner=$scope.product.parentId}}]),angular.module("seller-interface").controller("gdrive",["$scope","$state","$http","$q","$mdDialog","$mdSidenav","configGdrive","Googledrive","GooglePlus","Products","Authentication","ProductByUserId",function($scope,$state,$http,$q,$mdDialog,$mdSidenav,configGdrive,Googledrive,GooglePlus,Products,Authentication,ProductByUserId){function handleAuthentication(result){result&&!result.error?($scope.isAuth=!0,$scope.authName="Deauthorize",accessToken=result.access_token,createNewAccountFolder(),setFilePicker()):(console.log(result),console.log(result.error),console.log("fail to authentication")),$scope.$digest()}function createNewAccountFolder(){var callback=function(resp){console.log(resp.result.items.length),0==resp.result.items.length?$http.get("users/me").success(function(response){console.log(response);var folderName="URI-"+response._id;Googledrive.createFolder(folderName,accessToken)}):(console.log("there is already exist"),$scope.rootGdriveFolderID=resp.result.items[0].id,$scope.$digest())};Googledrive.findFolder(callback)}function newProductDialog($scope,$mdDialog){$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.authentication=Authentication,$scope.goChildView=function(stateName){$state.go(stateName),$mdSidenav("left").close()},$scope.redirect=function(stateName,param){$state.go(stateName,{productId:param}),$mdSidenav("left").close()},$http({url:"http://drive.google.com/uc?export=view&id=0B8FisuvAYPTfZl9VUnEwcGdFdHc",method:"GET",headers:{"Content-Type":"image/jpeg"}}).success(function(data){console.log(data)}),$scope.data={},$scope.data.cb1=!0,$scope.data.cb2=!1,$scope.user={title:"Technical Program Manager",email:"ipsum@lorem.com",firstName:"Naomi",lastName:"",company:"Google",address:"1600 Amphitheatre Pkwy",city:"Mountain View",state:"CA",country:"USA",postalCode:"94043"},$scope.todos=[{product_uri:"http://drive.google.com/uc?export=view&id=0B8FisuvAYPTfaTJnaHRWWmozRUU",name:"명이나물",who:"명이게이",when:"3:08PM",notes:"아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요 아나니 아나니 아나니리요"},{product_uri:"http://drive.google.com/uc?export=view&id=0B8FisuvAYPTfcDVGYVc3NEtaSEU",name:"더덕나물",who:"명이게이",when:"3:08PM",notes:" I'll be in your neighborhood doing errands"}];
var accessToken;$scope.permalLink="http://drive.google.com/uc?export=view&id=",$scope.arrive=!1,$scope.authName="Authorize",$scope.isAuth=!1,$scope.init=function(){window.gapi.load("auth",$scope.authenticateWithGoogle),window.gapi.load("picker"),gapi.client.load("urlshortener","v1")},$scope.authenticateWithGoogle=function(){window.gapi.auth.authorize({client_id:configGdrive.clientId,scope:configGdrive.scopes,immediate:!1},handleAuthentication)},$scope.setupPicker=function(){function pickerCallback(data){if(data.action==google.picker.Action.PICKED){$scope.files=data.docs,$scope.arrive=!0;var request=gapi.client.urlshortener.url.get({shortUrl:"http://goo.gl/fbsS"});request.then(function(response){appendResults(response.result.longUrl)},function(reason){console.log("Error: "+reason.result.error.message)}),$scope.$digest()}else data.action==google.picker.Action.CANCEL}Googledrive.setupPicker(accessToken,pickerCallback)},$scope.find=function(){$scope.products=ProductByUserId.query({userId:$scope.authentication.user._id})},$scope.onChangeStatus=function(){console.log("sdfsf"),$scope.$digest()},$scope.openNewProductDialog=function(ev){$mdDialog.show({templateUrl:"modules/seller-interface/template/newProductTemplate.html",targetEvent:ev,controller:newProductDialog,clickOutsideToClose:!1}).then(function(){$scope.alert='You said "Okay".'},function(){$scope.alert="You cancelled the dialog."})},$scope.toggleLeft=function(){$mdSidenav("left").open()},$scope.getPaymentHistory=function(){$scope.payments=Payments.query()}}]),angular.module("seller-interface").controller("BottomSheetExample",["$scope","$timeout","$mdBottomSheet",function($scope,$timeout,$mdBottomSheet){$scope.alert="",$scope.showListBottomSheet=function($event){$mdBottomSheet.show({templateUrl:"modules/seller-interface/views/bottom-sheet-list-template.html",controller:"ListBottomSheetCtrl",targetEvent:$event}).then(function(clickedItem){$scope.alert=clickedItem.name+" clicked!"})},$scope.showGridBottomSheet=function($event){$mdBottomSheet.show({templateUrl:"modules/seller-interface/views/bottom-sheet-grid-template.html",controller:"GridBottomSheetCtrl",targetEvent:$event}).then(function(clickedItem){$scope.alert=clickedItem.name+" clicked!"})}}]).controller("LeftCtrl",["$scope","$timeout","$mdSidenav",function($scope,$timeout,$mdSidenav){$scope.close=function(){$mdSidenav("left").close()}}]),angular.module("seller-interface").controller("ListBottomSheetCtrl",["$scope","$mdBottomSheet",function($scope,$mdBottomSheet){$scope.items=[{name:"Upload New Image (Google Drive)",icon:"share"},{name:"Select Existing Image (Google Drive)",icon:"upload"},{name:"Product History (Google Sheets)",icon:"copy"},{name:"Print this page (PDF Printer)",icon:"print"}],$scope.listItemClick=function($index){var clickedItem=$scope.items[$index];$mdBottomSheet.hide(clickedItem)}}]),angular.module("seller-interface").controller("GridBottomSheetCtrl",["$scope","$mdBottomSheet",function($scope,$mdBottomSheet){$scope.items=[{name:"Hangout",icon:"hangout"},{name:"Mail",icon:"mail"},{name:"Message",icon:"message"},{name:"Copy",icon:"copy"},{name:"Facebook",icon:"facebook"},{name:"Twitter",icon:"twitter"}],$scope.listItemClick=function($index){var clickedItem=$scope.items[$index];$mdBottomSheet.hide(clickedItem)}}]),angular.module("seller-interface").constant("CONFIG",{clientId:"574563539488-pctm7fr21vcetcfpdf9hhaje9q5vepee.apps.googleusercontent.com",apiKey:"AIzaSyAFtN5UMzS3aYUfCgd6JoixOVZRORkM1zw",scopes:["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/drive.install"]}),angular.module("seller-interface").value("config",{clientId:"574563539488-pctm7fr21vcetcfpdf9hhaje9q5vepee.apps.googleusercontent.com",apiKey:"AIzaSyAFtN5UMzS3aYUfCgd6JoixOVZRORkM1zw",scopes:["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/drive.install"]}),angular.module("seller-interface").controller("GdriveappsController",["$scope","$stateParams","$location","Authentication","Gdriveapps",function($scope,$stateParams,$location,Authentication,Gdriveapps){console.log($scope.authentication),$scope.create=function(){var gdriveapp=new Gdriveapps({name:this.name});gdriveapp.$save(function(response){$location.path("gdriveapps/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(gdriveapp){if(gdriveapp){gdriveapp.$remove();for(var i in $scope.gdriveapps)$scope.gdriveapps[i]===gdriveapp&&$scope.gdriveapps.splice(i,1)}else $scope.gdriveapp.$remove(function(){$location.path("gdriveapps")})},$scope.update=function(){var gdriveapp=$scope.gdriveapp;gdriveapp.$update(function(){$location.path("gdriveapps/"+gdriveapp._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.gdriveapps=Gdriveapps.query()},$scope.findOne=function(){$scope.gdriveapp=Gdriveapps.get({gdriveappId:$stateParams.gdriveappId})}}]),angular.module("seller-interface").controller("HistoryPaymentController",["$scope","Authentication","Payments","PaymentsBySellerData",function($scope,Authentication,Payments,PaymentsBySellerData){$scope.authentication=Authentication,console.log($scope.authentication),$scope.getPaymentHistory=function(){$scope.payments=PaymentsBySellerData.query({sellerData:Authentication.user._id})}}]);var googlePlusUserLoader=function(){function disableButton(button){button.setAttribute("disabled","disabled")}function enableButton(button){button.removeAttribute("disabled")}function changeState(newState){switch(state=newState){case STATE_START:enableButton(signin_button),disableButton(xhr_button),disableButton(revoke_button);break;case STATE_ACQUIRING_AUTHTOKEN:sampleSupport.log("Acquiring token..."),disableButton(signin_button),disableButton(xhr_button),disableButton(revoke_button);break;case STATE_AUTHTOKEN_ACQUIRED:disableButton(signin_button),enableButton(xhr_button),enableButton(revoke_button)}}function xhrWithAuth(method,url,interactive,callback){function getToken(){chrome.identity.getAuthToken({interactive:interactive},function(token){return chrome.runtime.lastError?void callback(chrome.runtime.lastError):(access_token=token,void requestStart())})}function requestStart(){var xhr=new XMLHttpRequest;xhr.open(method,url),xhr.setRequestHeader("Authorization","Bearer "+access_token),xhr.onload=requestComplete,xhr.send()}function requestComplete(){401==this.status&&retry?(retry=!1,chrome.identity.removeCachedAuthToken({token:access_token},getToken)):callback(null,this.status,this.response)}var access_token,retry=!0;getToken()}function getUserInfo(interactive){xhrWithAuth("GET","https://www.googleapis.com/plus/v1/people/me",interactive,onUserInfoFetched)}function onUserInfoFetched(error,status,response){if(error||200!=status)changeState(STATE_START);else{changeState(STATE_AUTHTOKEN_ACQUIRED),sampleSupport.log(response);var user_info=JSON.parse(response);populateUserInfo(user_info)}}function populateUserInfo(user_info){user_info_div.innerHTML="Hello "+user_info.displayName,fetchImageBytes(user_info)}function fetchImageBytes(user_info){if(user_info&&user_info.image&&user_info.image.url){var xhr=new XMLHttpRequest;xhr.open("GET",user_info.image.url,!0),xhr.responseType="blob",xhr.onload=onImageFetched,xhr.send()}}function onImageFetched(){if(200==this.status){var imgElem=document.createElement("img"),objUrl=window.webkitURL.createObjectURL(this.response);imgElem.src=objUrl,imgElem.onload=function(){window.webkitURL.revokeObjectURL(objUrl)},user_info_div.insertAdjacentElement("afterbegin",imgElem)}}function interactiveSignIn(){changeState(STATE_ACQUIRING_AUTHTOKEN),chrome.identity.getAuthToken({interactive:!0},function(token){chrome.runtime.lastError?(sampleSupport.log(chrome.runtime.lastError),changeState(STATE_START)):(sampleSupport.log("Token acquired:"+token+". See chrome://identity-internals for details."),changeState(STATE_AUTHTOKEN_ACQUIRED))})}function revokeToken(){user_info_div.innerHTML="",chrome.identity.getAuthToken({interactive:!1},function(current_token){if(!chrome.runtime.lastError){chrome.identity.removeCachedAuthToken({token:current_token},function(){});var xhr=new XMLHttpRequest;xhr.open("GET","https://accounts.google.com/o/oauth2/revoke?token="+current_token),xhr.send(),changeState(STATE_START),sampleSupport.log("Token revoked and removed from cache. Check chrome://identity-internals to confirm.")}})}var signin_button,xhr_button,revoke_button,user_info_div,STATE_START=1,STATE_ACQUIRING_AUTHTOKEN=2,STATE_AUTHTOKEN_ACQUIRED=3,state=STATE_START;return{onload:function(){signin_button=document.querySelector("#signin"),signin_button.addEventListener("click",interactiveSignIn),xhr_button=document.querySelector("#getxhr"),xhr_button.addEventListener("click",getUserInfo.bind(xhr_button,!0)),revoke_button=document.querySelector("#revoke"),revoke_button.addEventListener("click",revokeToken),user_info_div=document.querySelector("#user_info"),getUserInfo(!1)}}}();angular.module("seller-interface").factory("gdocs",[function(){var gdocs=new GDocs;return gdocs}]),angular.module("seller-interface").factory("Gdriveapps",["$resource",function($resource){return $resource("gdriveapps/:gdriveappId",{gdriveappId:"@_id"},{update:{method:"PUT"}})}]),angular.module("seller-interface").factory("Googledrive",["configGdrive",function(configGdrive){function createFolder(FolderName,accessToken){var request=gapi.client.request({path:"/drive/v2/files/",method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+accessToken},body:{title:FolderName,mimeType:"application/vnd.google-apps.folder"}});request.execute(function(resp){console.log(resp)})}function findFolder(callback){gapi.client.load("drive","v2").then(function(){var request=gapi.client.drive.files.list({q:"title contains 'URI-'",fields:"items(id,title)"});request.then(function(resp){callback(resp)})})}function getGoogleDriveInfo(){gapi.client.load("drive","v2").then(function(){var request=gapi.client.drive.about.get();request.execute(function(resp){console.log("Current user name: "+resp.name),console.log("Root folder ID: "+resp.rootFolderId),console.log("Total quota (bytes): "+resp.quotaBytesTotal),console.log("Used quota (bytes): "+resp.quotaBytesUsed)})})}function setupPicker(accessToken,callback){var callbackAfterFindFolder=function(resp){var folderID=resp.result.items[0].id,picker=(new google.picker.PickerBuilder).setOAuthToken(accessToken).setDeveloperKey(configGdrive.developerKey).addView((new google.picker.DocsUploadView).setParent(folderID)).addView((new google.picker.DocsView).setParent(folderID)).enableFeature(google.picker.Feature.MULTISELECT_ENABLED).setLocale("ko").setCallback(callback).build();picker.setVisible(!0)};findFolder(callbackAfterFindFolder)}function listFolder(){gapi.client.load("drive","v2").then(function(){var request=gapi.client.drive.files.list({maxResults:10,fields:"items(id,owners(displayName,emailAddress,isAuthenticatedUser,kind,permissionId),selfLink)"});request.then(function(resp){console.log("result File list"),console.log(resp)});var request=gapi.client.drive.files.list({maxResults:10,fields:"items(id,owners(displayName,emailAddress,isAuthenticatedUser,kind,permissionId),selfLink)"});request.then(function(resp){console.log("result File list"),console.log(resp)})})}return{createFolder:createFolder,findFolder:findFolder,getGoogleDriveInfo:getGoogleDriveInfo,setupPicker:setupPicker,listFolder:listFolder}}]),angular.module("seller-interface").factory("GooglePlus",[function(){function callGooglePlus(callback){gapi.client.load("plus","v1").then(function(){var request=gapi.client.plus.people.get({userId:"me"});request.then(callback,function(reason){console.log("Error: "+reason.result.error.message)})})}return{callGooglePlus:callGooglePlus}}]),angular.module("user-interface").config(["$stateProvider","$disqusProvider",function($stateProvider,$disqusProvider){$disqusProvider.setShortname("urimium"),$stateProvider.state("front-1",{url:"/front-1",templateUrl:"modules/user-interface/views/front-1.client.view.html"}).state("experimental-interface",{url:"/experimental-interface",templateUrl:"modules/user-interface/views/experimental-interface.client.view.html"}).state("listing-product",{url:"/",templateUrl:"modules/user-interface/views/listing-product.client.view.html"}).state("detail-product",{url:"/detail-product/:productId",templateUrl:"modules/user-interface/views/detail-product.client.view.html"})}]),angular.module("user-interface").controller("DetailProductController",["$scope","$stateParams","$sce","Products","GetPurchaseJWT","Payments","configGdrive",function($scope,$stateParams,$sce,Products,GetPurchaseJWT,Payments,configGdrive){function announceDeselected(tab){$scope.farewell="Goodbye "+tab.title+"!"}function announceSelected(tab){$scope.greeting="Hello "+tab.title+"!"}function buttonReady(params){"SUCCESS"==params.status&&("interactive"===document.readyState||"complete"==document.readyState||"loaded"==document.readyState?document.getElementById("wallet-button-holder").appendChild(params.walletButtonElement):document.addEventListener("DOMContentLoaded",function(){document.getElementById("wallet-button-holder").appendChild(params.walletButtonElement)}))}function handleAuthentication(){console.log(configGdrive.clientId),google.wallet.online.authorize({clientId:configGdrive.clientId,callback:function(result){console.log(result),google.wallet.online.createWalletButton({jwt:"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIwODI0MzM2MjAwNzE3NDcwMDQ2NiIsImF1ZCI6Ikdvb2dsZSIsInR5cCI6Imdvb2dsZS93YWxsZXQvb25saW5lL21hc2tlZC92Mi9yZXF1ZXN0IiwiaWF0IjoxNDE1ODU5MTYzLCJleHAiOjE2NzI0NjY0MDAwMDAsInJlcXVlc3QiOnsiY2xpZW50SWQiOiI1NzQ1NjM1Mzk0ODgtbjB2cmV2Z2pwMzYwNmwyMGhmazRycWZrMWRjOGozcWIuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJtZXJjaGFudE5hbWUiOiJwYlNob3AiLCJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjMwMDAvIiwicGhvbmVOdW1iZXJSZXF1aXJlZCI6dHJ1ZSwicGF5Ijp7ImVzdGltYXRlZFRvdGFsUHJpY2UiOiIxNS4wMSIsImN1cnJlbmN5Q29kZSI6IlVTRCJ9LCJzaGlwIjp7fX19.ayFuAfhYnlzBWNlJxbuwHT2o-4k01tZ2x41c9_fzeJk",success:createWalletButtonSuccessCallback,failure:createWalletButtonFailureCallback,ready:buttonReady,height:"44",width:"230"})}})}var productId=$stateParams.productId;$scope.quantity=1;var tabs=[{title:"반품/배송/교환 문의",content:"No Contents"},{title:"상세 상품설명",content:""},{title:"상품분석평/상품문의",content:"No Contents"}];$scope.findOne=function(){Products.get({productId:productId}).$promise.then(function(value){$scope.product=value,tabs[1].content=$sce.trustAsHtml(value.detailDesc)})},$scope.tabs=tabs,$scope.selectedIndex=1,$scope.announceSelected=announceSelected,$scope.announceDeselected=announceDeselected,$scope.addTab=function(title,view){view=view||title+" Content View",tabs.push({title:title,content:view,disabled:!1,style:style})},$scope.removeTab=function(tab){for(var j=0;j<tabs.length;j++)if(tab.title==tabs[j].title){$scope.tabs.splice(j,1);break}},$scope.from_one={from_one:"bold data in controller in from_one.js"};$scope.authenticateWithGoogle=function(){window.gapi.auth.authorize({client_id:configGdrive.clientId,scope:configGdrive.scopes,immediate:!1},handleAuthentication)};var createWalletButtonSuccessCallback=function(param){wallet.transactionId=param.response.response.googleTransactionId,console.log("Masked Wallet Response:"+JSON.stringify(param.response))},createWalletButtonFailureCallback=function(error){console.log("There was an error getting the Masked Wallet: "+JSON.stringify(error))};$scope.testPurchaseProduct=function(){google.wallet.online.setAccessToken("[accessToken]")},$scope.purchaseProduct=function(productID,quantity){console.log(productID),console.log(quantity);var optdesc="주문수량: "+quantity+"개";GetPurchaseJWT.query({productID:productID,qty:quantity,optdesc:optdesc}).$promise.then(function(response){google.payments.inapp.buy({parameters:{},jwt:response[0],success:function(result){console.log(result.jwt),createPaymentHistory(result)},failure:function(){window.alert("Your Payment transaction is failed")}})})};var createPaymentHistory=function(result){var payment=new Payments({name:result.request.name,price:Number(result.request.price),sellerData:result.request.sellerData,description:result.request.description,currencyCode:result.request.currencyCode,orderID:result.response.orderId});payment.$save(function(){},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("user-interface").controller("ExperimentalinterfaceController",["$scope",function(){}]),angular.module("user-interface").controller("Front1Controller",["$scope",function($scope){$scope.id="frint-1";var closedBox,boxGraphic=Snap("#boxSvg"),headBox=boxGraphic.select("#box-lead"),upperBox=boxGraphic.select("#box-lead-target"),headBoxOpenPath=headBox.attr("d"),headBoxClosedPath=boxGraphic.select("#box-lead-target").attr("d");headBox.click(function(){var path,ease;closedBox?(path=headBoxOpenPath,ease=mina.easein,closedBox=0,console.log("open Box")):(path=headBoxClosedPath,ease=mina.bounce,closedBox=1,console.log("close box")),headBox.stop().animate({d:path},1e3,ease)}),upperBox.click(function(){console.log("upperBox")})}]),angular.module("user-interface").controller("ListingProductController",["$scope","$log","Products",function($scope,$log,Products){function partition(input,size){for(var newArr=[],i=0;i<input.length;i+=size)newArr.push(input.slice(i,i+size));return newArr}$scope.find=function(){$scope.products=Products.query(),$scope.products.$promise.then(function(result){$scope.partitioned=partition(result,3)})},$scope.testColumnSystem=function(numberOfColumn){$scope.partitioned=partition($scope.products,numberOfColumn)},$scope.listItemClick=function($index){var clickedItem=$scope.items[$index];$mdBottomSheet.hide(clickedItem)}}]),angular.module("user-interface").directive("article",["Articles",function(Articles){return{templateUrl:"modules/user-interface/directives/templates/article.html",restrict:"E",link:function(scope){scope.find=function(){scope.articles=Articles.query()},scope.find()}}}]),angular.module("user-interface").directive("mainInterface",["$compile",function($compile){return{templateUrl:"modules/user-interface/directives/templates/main-interface.html",restrict:"E",link:function(scope){var draggableTargets=$(".draggable-target"),ids=[];angular.forEach(draggableTargets,function(index){ids.push(index.id)}),console.log(ids),scope.clicked=!1,scope.dragable=!1,scope.dragin=!1;var sortable=$("#box"),box=Draggable.create(sortable,{type:"x,y",edgeResistance:.85,onDragStart:function(){TweenMax.to("#box",.25,{scale:.8}),console.log("Click")},onDrag:function(){TweenMax.to(".draggable-target",0,{opacity:1,backgroundColor:"lightgreen"}),angular.forEach(ids,function(index){box[0].hitTest("#"+index,20)&&TweenMax.to("#"+index,.25,{opacity:.5,backgroundColor:"lightgreen"})})},onDragEnd:function(){angular.forEach(ids,function(index){if(box[0].hitTest("#"+index,20)){var el=$compile("<article></article>")(scope);angular.element("#"+index).append(el),box[0].applyBounds("#widget_menu"),box[0].vars.bounds=""}}),TweenMax.to("#box",.25,{scale:1})}})}}}]),angular.module("user-interface").factory("Allproducts",["$resource",function($resource){return $resource("products/:productID",{productID:"@_id"})}]),angular.module("user-interface").factory("AllBanners",["$resource",function($resource){return $resource("banners",{productID:"@_id"})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("utility").config(["$stateProvider",function($stateProvider){$stateProvider.state("test-page-generator",{url:"/test-page-generator",templateUrl:"modules/utility/views/test-page-generator.client.view.html"})}]),angular.module("utility").controller("TestpageGeneratorController",["$scope",function($scope){$scope.pageSrc="<h1>Hello World2</h1>"}]),angular.module("utility").directive("pageFormatCreation",[function(){return{templateUrl:"modules/utility/directives/template/default-format.html",restrict:"E",link:function(){}}}]),angular.module("utility").directive("pageGenerator",[function(){return{template:'<div ng-bind-html="view"></div>',restrict:"E",scope:{pageInfo:"="},link:function(scope){null!=scope.pageInfo?(console.log(scope.pageInfo),scope.view=scope.pageInfo):(scope.pageInfo={frame:["r1c1"],name:"test",appliedDirective:{Article:["r1c1"]}},scope.view="<h2>There is no Page Content</h2>")}}}]);